# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import mafia_game_pb2 as mafia__game__pb2


class ServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InstallName = channel.unary_unary(
                '/Server/InstallName',
                request_serializer=mafia__game__pb2.NameRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.Reply.FromString,
                )
        self.GetRoomId = channel.unary_unary(
                '/Server/GetRoomId',
                request_serializer=mafia__game__pb2.EmptyRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.RoomResponse.FromString,
                )
        self.GetStream = channel.unary_stream(
                '/Server/GetStream',
                request_serializer=mafia__game__pb2.EmptyRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.Reply.FromString,
                )
        self.StartTheGameRequest = channel.unary_unary(
                '/Server/StartTheGameRequest',
                request_serializer=mafia__game__pb2.EmptyRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.EmptyResponse.FromString,
                )
        self.RoleAssignment = channel.unary_unary(
                '/Server/RoleAssignment',
                request_serializer=mafia__game__pb2.NameRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.Role.FromString,
                )
        self.UsersInfo = channel.unary_unary(
                '/Server/UsersInfo',
                request_serializer=mafia__game__pb2.NameRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.UsersInfoMessage.FromString,
                )
        self.AccusePerson = channel.unary_unary(
                '/Server/AccusePerson',
                request_serializer=mafia__game__pb2.AccuseRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.EmptyResponse.FromString,
                )
        self.Exit = channel.unary_unary(
                '/Server/Exit',
                request_serializer=mafia__game__pb2.NameRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.EmptyResponse.FromString,
                )
        self.KillPerson = channel.unary_unary(
                '/Server/KillPerson',
                request_serializer=mafia__game__pb2.NameRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.EmptyResponse.FromString,
                )
        self.CheckPerson = channel.unary_unary(
                '/Server/CheckPerson',
                request_serializer=mafia__game__pb2.NameRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.BoolReply.FromString,
                )
        self.EndDayRequest = channel.unary_unary(
                '/Server/EndDayRequest',
                request_serializer=mafia__game__pb2.EmptyRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.Reply.FromString,
                )
        self.EndNightRequest = channel.unary_unary(
                '/Server/EndNightRequest',
                request_serializer=mafia__game__pb2.EmptyRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.Reply.FromString,
                )
        self.CleanAccusedRequest = channel.unary_unary(
                '/Server/CleanAccusedRequest',
                request_serializer=mafia__game__pb2.EmptyRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.EmptyResponse.FromString,
                )
        self.AnnounceMafia = channel.unary_unary(
                '/Server/AnnounceMafia',
                request_serializer=mafia__game__pb2.AnnounceMafiaRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.EmptyResponse.FromString,
                )
        self.CheckGameEnding = channel.unary_unary(
                '/Server/CheckGameEnding',
                request_serializer=mafia__game__pb2.EmptyRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.BoolReply.FromString,
                )
        self.GetVictims = channel.unary_unary(
                '/Server/GetVictims',
                request_serializer=mafia__game__pb2.NameRequest.SerializeToString,
                response_deserializer=mafia__game__pb2.UsersInfoMessage.FromString,
                )


class ServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InstallName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoomId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartTheGameRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RoleAssignment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UsersInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AccusePerson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KillPerson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckPerson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndDayRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndNightRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CleanAccusedRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnnounceMafia(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckGameEnding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVictims(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InstallName': grpc.unary_unary_rpc_method_handler(
                    servicer.InstallName,
                    request_deserializer=mafia__game__pb2.NameRequest.FromString,
                    response_serializer=mafia__game__pb2.Reply.SerializeToString,
            ),
            'GetRoomId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoomId,
                    request_deserializer=mafia__game__pb2.EmptyRequest.FromString,
                    response_serializer=mafia__game__pb2.RoomResponse.SerializeToString,
            ),
            'GetStream': grpc.unary_stream_rpc_method_handler(
                    servicer.GetStream,
                    request_deserializer=mafia__game__pb2.EmptyRequest.FromString,
                    response_serializer=mafia__game__pb2.Reply.SerializeToString,
            ),
            'StartTheGameRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.StartTheGameRequest,
                    request_deserializer=mafia__game__pb2.EmptyRequest.FromString,
                    response_serializer=mafia__game__pb2.EmptyResponse.SerializeToString,
            ),
            'RoleAssignment': grpc.unary_unary_rpc_method_handler(
                    servicer.RoleAssignment,
                    request_deserializer=mafia__game__pb2.NameRequest.FromString,
                    response_serializer=mafia__game__pb2.Role.SerializeToString,
            ),
            'UsersInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.UsersInfo,
                    request_deserializer=mafia__game__pb2.NameRequest.FromString,
                    response_serializer=mafia__game__pb2.UsersInfoMessage.SerializeToString,
            ),
            'AccusePerson': grpc.unary_unary_rpc_method_handler(
                    servicer.AccusePerson,
                    request_deserializer=mafia__game__pb2.AccuseRequest.FromString,
                    response_serializer=mafia__game__pb2.EmptyResponse.SerializeToString,
            ),
            'Exit': grpc.unary_unary_rpc_method_handler(
                    servicer.Exit,
                    request_deserializer=mafia__game__pb2.NameRequest.FromString,
                    response_serializer=mafia__game__pb2.EmptyResponse.SerializeToString,
            ),
            'KillPerson': grpc.unary_unary_rpc_method_handler(
                    servicer.KillPerson,
                    request_deserializer=mafia__game__pb2.NameRequest.FromString,
                    response_serializer=mafia__game__pb2.EmptyResponse.SerializeToString,
            ),
            'CheckPerson': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckPerson,
                    request_deserializer=mafia__game__pb2.NameRequest.FromString,
                    response_serializer=mafia__game__pb2.BoolReply.SerializeToString,
            ),
            'EndDayRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.EndDayRequest,
                    request_deserializer=mafia__game__pb2.EmptyRequest.FromString,
                    response_serializer=mafia__game__pb2.Reply.SerializeToString,
            ),
            'EndNightRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.EndNightRequest,
                    request_deserializer=mafia__game__pb2.EmptyRequest.FromString,
                    response_serializer=mafia__game__pb2.Reply.SerializeToString,
            ),
            'CleanAccusedRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.CleanAccusedRequest,
                    request_deserializer=mafia__game__pb2.EmptyRequest.FromString,
                    response_serializer=mafia__game__pb2.EmptyResponse.SerializeToString,
            ),
            'AnnounceMafia': grpc.unary_unary_rpc_method_handler(
                    servicer.AnnounceMafia,
                    request_deserializer=mafia__game__pb2.AnnounceMafiaRequest.FromString,
                    response_serializer=mafia__game__pb2.EmptyResponse.SerializeToString,
            ),
            'CheckGameEnding': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckGameEnding,
                    request_deserializer=mafia__game__pb2.EmptyRequest.FromString,
                    response_serializer=mafia__game__pb2.BoolReply.SerializeToString,
            ),
            'GetVictims': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVictims,
                    request_deserializer=mafia__game__pb2.NameRequest.FromString,
                    response_serializer=mafia__game__pb2.UsersInfoMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Server', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Server(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InstallName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/InstallName',
            mafia__game__pb2.NameRequest.SerializeToString,
            mafia__game__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoomId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/GetRoomId',
            mafia__game__pb2.EmptyRequest.SerializeToString,
            mafia__game__pb2.RoomResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Server/GetStream',
            mafia__game__pb2.EmptyRequest.SerializeToString,
            mafia__game__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartTheGameRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/StartTheGameRequest',
            mafia__game__pb2.EmptyRequest.SerializeToString,
            mafia__game__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RoleAssignment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/RoleAssignment',
            mafia__game__pb2.NameRequest.SerializeToString,
            mafia__game__pb2.Role.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UsersInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/UsersInfo',
            mafia__game__pb2.NameRequest.SerializeToString,
            mafia__game__pb2.UsersInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AccusePerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/AccusePerson',
            mafia__game__pb2.AccuseRequest.SerializeToString,
            mafia__game__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Exit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/Exit',
            mafia__game__pb2.NameRequest.SerializeToString,
            mafia__game__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KillPerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/KillPerson',
            mafia__game__pb2.NameRequest.SerializeToString,
            mafia__game__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckPerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/CheckPerson',
            mafia__game__pb2.NameRequest.SerializeToString,
            mafia__game__pb2.BoolReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndDayRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/EndDayRequest',
            mafia__game__pb2.EmptyRequest.SerializeToString,
            mafia__game__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndNightRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/EndNightRequest',
            mafia__game__pb2.EmptyRequest.SerializeToString,
            mafia__game__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CleanAccusedRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/CleanAccusedRequest',
            mafia__game__pb2.EmptyRequest.SerializeToString,
            mafia__game__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AnnounceMafia(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/AnnounceMafia',
            mafia__game__pb2.AnnounceMafiaRequest.SerializeToString,
            mafia__game__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckGameEnding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/CheckGameEnding',
            mafia__game__pb2.EmptyRequest.SerializeToString,
            mafia__game__pb2.BoolReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVictims(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Server/GetVictims',
            mafia__game__pb2.NameRequest.SerializeToString,
            mafia__game__pb2.UsersInfoMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
